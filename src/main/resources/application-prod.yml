# =============================================================================
# 프로덕션 환경 설정
# =============================================================================
spring:
  datasource:
    url: jdbc:oracle:thin:${DB_USERNAME}/${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: oracle.jdbc.driver.OracleDriver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      initialization-fail-timeout: 60000
      connection-test-query: SELECT 1 FROM DUAL
  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    format_sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.OracleDialect
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
    open-in-view: false
  main:
    lazy-initialization: false
    banner-mode: off
  security:
    user:
      name: admin
      password: admin123

server:
  port: 8080
  shutdown: graceful

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: INFO
    com.restaurant.reservation: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
    org.springframework.web: INFO
    org.springframework.boot: INFO

aws:
  cognito:
    region: ${AWS_REGION}
    user-pool-id: ${COGNITO_USER_POOL_ID}
    client-id: ${COGNITO_CLIENT_ID}
    client-secret: ${COGNITO_CLIENT_SECRET}
    domain: ${COGNITO_DOMAIN}
    redirect-uri: ${COGNITO_REDIRECT_URI}
    authorize-endpoint: ${COGNITO_AUTHORIZE_ENDPOINT}
    token-endpoint: ${COGNITO_TOKEN_ENDPOINT}
    logout-endpoint: ${COGNITO_LOGOUT_ENDPOINT}
    jwks-url: ${COGNITO_JWKS_URL}
    response-type: code
    scope: email openid phone profile
    grant-type: authorization_code
    jwt:
      secret: ${JWT_SECRET_KEY}
      expiration: 3600000
      refresh-expiration: 86400000