# =============================================================================
# 프로덕션 환경 설정
# =============================================================================
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    hibernate:
      ddl-auto: validate
      dialect: org.hibernate.dialect.Oracle12cDialect
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.Oracle12cDialect
        format_sql: true
        connection-test-query: SELECT 1 FROM DUAL
        connection-timeout: 30000
        maximum-pool-size: 10
        minimum-idle: 2
        idle-timeout: 600000
        max-lifetime: 1800000
        leak-detection-threshold: 60000
        characterEncoding: UTF-8
        time_zone: Asia/Seoul
  datasource:
    url: >-
      jdbc:oracle:thin:@(DESCRIPTION=
        (ADDRESS_LIST=
          (ADDRESS=(PROTOCOL=TCP)(HOST=${DB_HOST})(PORT=${DB_PORT}))
          (ADDRESS=(PROTOCOL=TCP)(HOST=${STDB_HOST})(PORT=${DB_PORT}))
        )
        (CONNECT_DATA=(SERVICE_NAME=${DB_SERVICE_NAME}))
        (FAILOVER=on)(LOAD_BALANCE=off)
      )
    driver-class-name: oracle.jdbc.OracleDriver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      connection-test-query: SELECT 1 FROM DUAL
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  mvc:
    hiddenmethod:
      filter:
        enabled: true

server:
  port: ${SERVER_PORT:8080}

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.engine.jdbc.env.spi.JdbcEnvironment: DEBUG
    org.hibernate.engine.jdbc.spi.SqlExceptionHelper: DEBUG
    com.restaurant.reservation: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.boot.autoconfigure: INFO
    org.springframework.boot.actuate: INFO
    org.springframework.boot.autoconfigure.jdbc: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

aws:
  cognito:
    user-pool-id: ${COGNITO_USER_POOL_ID}
    client-id: ${COGNITO_CLIENT_ID}
    client-secret: ${COGNITO_CLIENT_SECRET}
    domain: ${COGNITO_DOMAIN}
    region: ap-northeast-2

    jwks-url: ${COGNITO_JWKS_URL}
    token-endpoint: ${COGNITO_TOKEN_ENDPOINT}
    authorize-endpoint: ${COGNITO_AUTHORIZE_ENDPOINT}
    logout-endpoint: ${COGNITO_LOGOUT_ENDPOINT}

    redirect-uri: ${COGNITO_REDIRECT_URI}
    scope: openid profile email phone
    response-type: code
    grant-type: authorization_code

security:
  jwt:
    secret: ${JWT_SECRET_KEY} # 실제 운영 시 환경변수로 관리
    expiration: 3600000  # 1시간 (밀리초)
    refresh-expiration: 86400000  # 24시간 (밀리초)